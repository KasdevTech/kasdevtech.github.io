<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Terraform on KasdevTech</title><link>https://kasdevtech.github.io/tags/terraform/</link><description>Recent content in Terraform on KasdevTech</description><generator>Hugo -- 0.147.8</generator><language>en-us</language><lastBuildDate>Wed, 16 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kasdevtech.github.io/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform State Corruption in Azure — Recovered in 4 Steps</title><link>https://kasdevtech.github.io/terraform/statefile-corrupted/</link><pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/terraform/statefile-corrupted/</guid><description>Faced a corrupted Terraform state file in Azure Blob Storage? Here&amp;rsquo;s a real-world recovery guide to restore infrastructure state safely in 4 simple steps.</description></item><item><title>Terraform Fails with State Lock Error in Azure DevOps Pipeline</title><link>https://kasdevtech.github.io/devops/terraform-withsatelock-failure/</link><pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/devops/terraform-withsatelock-failure/</guid><description>&lt;p>If you&amp;rsquo;re running Terraform in Azure DevOps and see this:&lt;/p>
&lt;p>Error: Error acquiring the state lock: state blob is already locked&lt;/p>
&lt;p>You&amp;rsquo;re facing a &lt;strong>Terraform state lock&lt;/strong> issue — and it can block your pipeline!&lt;/p>
&lt;h4 id="what-causes-it">What Causes It?&lt;/h4>
&lt;ul>
&lt;li>A previous run crashed or was canceled&lt;/li>
&lt;li>Two pipelines tried to modify state simultaneously&lt;/li>
&lt;li>State is locked but not released due to network timeout&lt;/li>
&lt;/ul>
&lt;h4 id="step-by-step-fix">Step-by-Step Fix&lt;/h4>
&lt;h4 id="manually-unlock-state">Manually Unlock State&lt;/h4>
&lt;p>Use this command from your local machine (or DevOps pipeline):&lt;/p></description></item><item><title>Getting Started with Terraform on Azure</title><link>https://kasdevtech.github.io/terraform/getting-started-with-terraform-on-azure/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/terraform/getting-started-with-terraform-on-azure/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Terraform is a powerful Infrastructure as Code (IaC) tool that allows you to define and provision your Azure resources using code.&lt;/p>
&lt;p>In this post, we will cover:&lt;/p>
&lt;ul>
&lt;li>Setting up Terraform CLI&lt;/li>
&lt;li>Writing your first Terraform configuration&lt;/li>
&lt;li>Deploying resources on Azure&lt;/li>
&lt;/ul>
&lt;h3 id="steps">Steps&lt;/h3>
&lt;p>Install Terraform CLI&lt;br>
Configure your Azure credentials&lt;br>
Write &lt;code>main.tf&lt;/code> with Azure provider&lt;br>
Run &lt;code>terraform init&lt;/code>, &lt;code>plan&lt;/code>, and &lt;code>apply&lt;/code>&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>Terraform allows you to automate cloud infrastructure — making deployments reproducible, version-controlled, and consistent.&lt;/p></description></item></channel></rss>