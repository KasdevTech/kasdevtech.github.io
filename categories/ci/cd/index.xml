<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CI/CD on KasdevTech</title><link>https://kasdevtech.github.io/categories/ci/cd/</link><description>Recent content in CI/CD on KasdevTech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 04 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kasdevtech.github.io/categories/ci/cd/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure DevOps Git Repos Not Showing in Build Pipeline: Fixing Broken Repo Connections</title><link>https://kasdevtech.github.io/devops/azuredevops-gitreposnotshowinginbuild-pipeline/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/devops/azuredevops-gitreposnotshowinginbuild-pipeline/</guid><description>
&lt;p>Seeing this error when trying to trigger a pipeline from your Azure DevOps repo?&lt;/p>
&lt;p>Error: The repository ‘&lt;!-- raw HTML omitted -->’ could not be found or no longer exists.&lt;/p>
&lt;h4 id="common-causes">Common Causes&lt;/h4>
&lt;ul>
&lt;li>Repository renamed or deleted&lt;/li>
&lt;li>Permissions changed in the project&lt;/li>
&lt;li>PAT token expired (for GitHub or external repos)&lt;/li>
&lt;/ul>
&lt;h4 id="fixing-the-issue">Fixing the Issue&lt;/h4>
&lt;h4 id="azure-repos-git">Azure Repos Git&lt;/h4>
&lt;ul>
&lt;li>Navigate to &lt;code>Repos&lt;/code> in your project&lt;/li>
&lt;li>Check if the repo still exists and hasn’t been renamed&lt;/li>
&lt;li>Confirm the branch in your trigger matches the YAML&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">trigger&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">include&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">main&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="github-repositories">GitHub Repositories&lt;/h4>
&lt;p>Go to Project Settings → Service Connections
Open your GitHub connection
Re-authenticate or update the PAT/token
Ensure scopes: repo, workflow, admin:repo_hook&lt;/p></description></item><item><title>Fixing 'Permission Denied' Errors While Deploying from Azure Pipelines to Azure Resources</title><link>https://kasdevtech.github.io/devops/azuredevops-permission-error/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/devops/azuredevops-permission-error/</guid><description>
&lt;p>Deploying resources from Azure Pipelines and running into the dreaded &lt;code>AuthorizationFailed&lt;/code> error? You’re not alone!&lt;/p>
&lt;p>Error: AuthorizationFailed: The client does not have authorization to perform action &amp;lsquo;Microsoft.Web/sites/write&amp;rsquo;&amp;hellip;&lt;/p>
&lt;h4 id="root-cause">Root Cause&lt;/h4>
&lt;p>This error usually occurs because the &lt;strong>service principal&lt;/strong> used in your Azure DevOps &lt;strong>service connection&lt;/strong> does not have the required &lt;strong>role-based access control (RBAC)&lt;/strong> permissions on the target resource group or subscription.&lt;/p>
&lt;h4 id="step-by-step-fix">Step-by-Step Fix&lt;/h4>
&lt;h4 id="verify-the-service-connection-identity">Verify the Service Connection Identity&lt;/h4>
&lt;ul>
&lt;li>Go to &lt;code>Project Settings&lt;/code> → &lt;code>Service Connections&lt;/code>&lt;/li>
&lt;li>Click on your Azure Resource Manager connection&lt;/li>
&lt;li>Note the &lt;strong>Object ID&lt;/strong> of the service principal&lt;/li>
&lt;/ul>
&lt;h4 id="assign-the-correct-role-in-azure-portal">Assign the Correct Role in Azure Portal&lt;/h4>
&lt;ul>
&lt;li>Navigate to your &lt;strong>Resource Group&lt;/strong> (or Subscription)&lt;/li>
&lt;li>Go to &lt;code>Access Control (IAM)&lt;/code> → &lt;code>Add Role Assignment&lt;/code>&lt;/li>
&lt;li>Select the role (e.g., &lt;code>Contributor&lt;/code> or &lt;code>Web App Contributor&lt;/code>)&lt;/li>
&lt;li>Assign it to the &lt;strong>service principal&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="review-pipeline-yaml">Review Pipeline YAML&lt;/h4>
&lt;p>Make sure you&amp;rsquo;re referencing the correct service connection:&lt;/p></description></item><item><title>How to Create a Self-Hosted Azure DevOps Agent using Azure Virtual Machine Scale Sets</title><link>https://kasdevtech.github.io/devops/self-hosted-agents-vmss/</link><pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/devops/self-hosted-agents-vmss/</guid><description>
&lt;p>Setting up self-hosted agents using &lt;strong>Azure Virtual Machine Scale Sets (VMSS)&lt;/strong> gives you more &lt;strong>control, performance, and scalability&lt;/strong> compared to Microsoft-hosted agents.&lt;/p>
&lt;blockquote>
&lt;p>This guide includes detailed setup steps, CLI commands, and screenshots from the Azure Portal.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="use-cases-for-self-hosted-agents">Use Cases for Self-Hosted Agents&lt;/h3>
&lt;ul>
&lt;li>Large builds requiring more compute&lt;/li>
&lt;li>Custom toolchains (e.g., Docker, Terraform, Node.js)&lt;/li>
&lt;li>Controlled access with internal networking&lt;/li>
&lt;li>Reducing build time and cost&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Azure DevOps Organization + Project&lt;/li>
&lt;li>Azure Subscription&lt;/li>
&lt;li>Contributor or Owner role on Azure&lt;/li>
&lt;li>VMSS Contributor role for DevOps managed identity&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="step-1-create-a-virtual-machine-scale-set-vmss">Step 1: Create a Virtual Machine Scale Set (VMSS)&lt;/h4>
&lt;p>You can create this via &lt;strong>Azure CLI&lt;/strong> or &lt;strong>Portal&lt;/strong>. Below are the CLI steps:&lt;/p></description></item></channel></rss>