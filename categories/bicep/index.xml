<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bicep on KasdevTech</title><link>https://kasdevtech.github.io/categories/bicep/</link><description>Recent content in Bicep on KasdevTech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kasdevtech.github.io/categories/bicep/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing 'az login' Authentication Failures in IaC Pipelines</title><link>https://kasdevtech.github.io/devops/authentication-failure/</link><pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/devops/authentication-failure/</guid><description>
&lt;p>You added an &lt;code>az login&lt;/code> command to your pipeline… and now the pipeline fails?&lt;/p>
&lt;p>ERROR: Please run &amp;lsquo;az login&amp;rsquo; to setup account&lt;/p>
&lt;h4 id="root-cause">Root Cause&lt;/h4>
&lt;p>The Azure CLI needs credentials to authenticate. When run in a pipeline, &lt;code>az login&lt;/code> needs to be done &lt;strong>non-interactively&lt;/strong> using a &lt;strong>service principal&lt;/strong>.&lt;/p>
&lt;h4 id="solution-use-service-principal-with-secrets">Solution: Use Service Principal with Secrets&lt;/h4>
&lt;p>Add a login step like this in your YAML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">script&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> az login --service-principal \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> --username $appId \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> --password $clientSecret \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> --tenant $tenantId&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">appId&lt;/span>: &lt;span style="color:#ae81ff">$(azureAppId)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">clientSecret&lt;/span>: &lt;span style="color:#ae81ff">$(azureClientSecret)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tenantId&lt;/span>: &lt;span style="color:#ae81ff">$(azureTenantId)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">Then store these as secrets in Pipeline → Library → Secure files or variable groups.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="use-azurecli2-task-instead">Use AzureCLI@2 Task Instead&lt;/h4>
&lt;pre tabindex="0">&lt;code>- task: AzureCLI@2
inputs:
azureSubscription: &amp;#39;MyServiceConnection&amp;#39;
scriptType: bash
scriptLocation: inlineScript
inlineScript: |
az account show
This auto-authenticates using the linked service connection.
&lt;/code>&lt;/pre>&lt;h4 id="conclusion">Conclusion&lt;/h4>
&lt;p>Use the right login method for your IaC tools. For Terraform or Bicep, the AzureCLI@2 task is the safest, most DevOps-friendly approach.&lt;/p></description></item></channel></rss>