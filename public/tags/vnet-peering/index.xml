<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VNet Peering on KasdevTech</title>
    <link>http://localhost:1313/tags/vnet-peering/</link>
    <description>Recent content in VNet Peering on KasdevTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/vnet-peering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Hub-Spoke Architecture &amp; VNet Peering</title>
      <link>http://localhost:1313/azure/hub-spoke/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/azure/hub-spoke/</guid>
      <description>
        
          
            &lt;h4 id=&#34;azure-hub-spoke-architecture&#34;&gt;Azure Hub-Spoke Architecture&lt;/h4&gt;
&lt;p&gt;Once you understand VNets and Subnets, the next step is designing how they connect. One of the most &lt;strong&gt;popular architectures&lt;/strong&gt; in Azure is called the &lt;strong&gt;Hub-Spoke Model&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;what-is-the-hub-spoke-model&#34;&gt;What is the Hub-Spoke Model?&lt;/h4&gt;
&lt;p&gt;Think of the &lt;strong&gt;Hub&lt;/strong&gt; as the central point where all shared services live — like a corporate office.&lt;/p&gt;
&lt;p&gt;Each &lt;strong&gt;Spoke&lt;/strong&gt; is a separate environment — like dev, test, or app workloads.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     +-----------------------+
     |      Hub VNet         |
     |  (Firewall, VPN, etc) |
     +-----------------------+
         /     |     \
        /      |      \
 +--------+ +--------+ +--------+
 | Spoke1 | | Spoke2 | | Spoke3 |
 +--------+ +--------+ +--------+
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;what-is-vnet-peering&#34;&gt;What is VNet Peering?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;VNet Peering&lt;/strong&gt; allows two VNets to communicate &lt;strong&gt;privately&lt;/strong&gt; using Azure backbone (no internet).&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
