<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ChromaDB on KasdevTech</title><link>https://kasdevtech.github.io/tags/chromadb/</link><description>Recent content in ChromaDB on KasdevTech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kasdevtech.github.io/tags/chromadb/index.xml" rel="self" type="application/rss+xml"/><item><title>RAG (Retrieval-Augmented Generation)</title><link>https://kasdevtech.github.io/ai/rag/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>https://kasdevtech.github.io/ai/rag/</guid><description>
&lt;p>Generative AI is powerful—but what if your model needs &lt;strong>real-time&lt;/strong>, &lt;strong>domain-specific&lt;/strong>, or &lt;strong>private data&lt;/strong>? That’s where &lt;strong>RAG (Retrieval-Augmented Generation)&lt;/strong> comes in.&lt;/p>
&lt;h4 id="what-is-rag">What is RAG?&lt;/h4>
&lt;p>&lt;strong>RAG&lt;/strong> stands for &lt;strong>Retrieval-Augmented Generation&lt;/strong>. It&amp;rsquo;s a technique that enhances a language model’s response by &lt;strong>retrieving relevant documents&lt;/strong> from a knowledge base and &lt;strong>injecting them into the prompt&lt;/strong>.&lt;/p>
&lt;p>Think of it as “chat with memory or custom knowledge.”&lt;/p>
&lt;h4 id="how-rag-works-simplified">How RAG Works (Simplified)&lt;/h4>
&lt;ol>
&lt;li>&lt;strong>User asks a question&lt;/strong>&lt;/li>
&lt;li>System &lt;strong>retrieves&lt;/strong> relevant context (documents) from a vector database (like ChromaDB or Pinecone)&lt;/li>
&lt;li>Retrieved context is &lt;strong>combined&lt;/strong> with the user’s question&lt;/li>
&lt;li>The &lt;strong>language model&lt;/strong> (like GPT-4o) generates a response using this combined input&lt;/li>
&lt;/ol>
&lt;h4 id="example-build-a-rag-app-with-fastapi--openai--chromadb">Example: Build a RAG App with FastAPI + OpenAI + ChromaDB&lt;/h4>
&lt;p>Let’s walk through an architecture example of a &lt;strong>chatbot that answers questions from your company docs&lt;/strong>.&lt;/p></description></item></channel></rss>